Object.entries()
Object.values()
for...in loop
Object.keys() and map()
Using Array.from() method
Using the spread operator (...)
Using JSON.parse() and JSON.stringify()

------------------------------------------------

Object.entries() is a method available on all JavaScript objects that returns an array of arrays,
where each inner array consists of a key/value pair from the object. Here's an example of using Object.entries() to 
convert an object into an array

let obj = { name: 'John', age: 30, city: 'New York' };
let arr = Object.entries(obj);
console.log(arr);
// Output: [['name', 'John'], ['age', 30], ['city', 'New York']]

-----------------------------------------------------
How to use Object.values()?

Object.values() is a method available on all JavaScript objects that returns an array of the object's values.
Here's an example of using Object.values() to convert an object into an array

let obj = { name: 'John', age: 30, city: 'New York' };
let arr = Object.values(obj);
console.log(arr);
// Output: ['John', 30, 'New York']

---------------------------------------------------------
Using for...in loop with Objects
The for...in loop is a traditional looping method in JavaScript to iterate over the properties (keys) of an object.
It can be used to convert an object into an array by extracting its values and forming a new array with them. 
Here's an example

let obj = {a: 1, b: 2, c: 3};
let arr = [];
for (let key in obj) {
    arr.push(obj[key]);
}

console.log(arr);
// Output: [1, 2, 3]

------------------------------------------------------------
Using Object.keys() and map()

The Object.keys() method returns an array of the properties (keys) of an object, 
and the map() method allows you to transform each item in an array and return a new array.

Here's an example to use it,

let obj = {a: 1, b: 2, c: 3};
let arr = Object.keys(obj).map(key => obj[key]);
console.log(arr);
// Output: [1, 2, 3]

------------------------------------------------------------
Array.from() is best method
To convert a JavaScript object into an array is by using the Array.from() method. 
The Array.from() method creates a new, shallow-copied Array instance from an array-like or iterable object. 
Syntax:
Array.from(object, mapFunction, thisValue);

let obj = {a: 1, b: 2, c: 3};
let arr = Array.from(Object.entries(obj), ([key, value]) => value);
console.log(arr);
// Output: [1, 2, 3]

-----------------------------------------------------------
How spread operator help to convert an Object into an Array
The spread operator allows you to spread the elements of an iterable such as an object, into a new array.

let obj = {a: 1, b: 2, c: 3};
let arr = [...Object.values(obj)];

console.log(arr);
// Output: [1, 2, 3]
