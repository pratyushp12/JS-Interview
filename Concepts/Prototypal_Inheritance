/* Object Prototype

let human = {
    mortal:true,
    greet:function(){
        return this;
    }
}

let human2=Object.create(human);

console.log(human2.greet());
console.log(human.greet());

console.log(human.isPrototypeOf(human2));
*/

//Function Prototype

function Person(name,age){
    this.name=name;
    this.age=age;
}

Person.prototype.greet= function (){
    return `Hi I am ${this.name} and age is ${this.age}`;
}

function Teacher(name, age, subject){
    Person.call(this,name,age);
    this.subject=subject;
}

Teacher.prototype=Object.create(Person.prototype);

const teacher = new Teacher('Pratyush',24,'CS');
const person = new Person('Praveen',24);

console.log(teacher.greet()); //Hi I am Pratyush and age is 24

console.log(Person.isPrototypeOf(Teacher)); //false

console.log(Person.prototype.isPrototypeOf(Teacher.prototype)); //True

console.log(teacher.constructor.name); //Person

Teacher.prototype=Object.assign(Teacher.prototype, {constructor:Teacher}); //assign constructor to Teacher

console.log(teacher.constructor.name); //Teacher

console.log(teacher instanceof Teacher); //true
console.log(teacher instanceof Person); //true
console.log(person instanceof Teacher); //false
console.log(person instanceof Person); //true
